1. str 문제관련
1.2) 리스트에 있는 str 한줄씩 출력
print('\n'.join(리스트이름))


1.2) 리스트에 있는 str 붙여서 출력 ['a', 'b', 'c', 'd'] -> abcd로 출력
temp = ['a', 'b', 'c', 'd']
print(''.join(map(str, temp)))


2) a s d -> ['a', 's', 'd']
board = [list(input().split()) for _ in range(N)]


3) asd -> ['a', 's', 'd']
asd = list(input().rstrip())


4) 문자열 두개를 비교하는거면 리스트에 넣지말고 그냥 str(input())으로 저장해서 다루기


5) 백트래킹 암호만들기 1759 -> set으로 문자열 중복체크같은거 함 셋으로 하면 알아서 중복제거된다!
그래서 교집합 합집합 이런거 구할때 유용함
temp = []
a = set(['a', 'e', 'i', 'o', 'u'])
b = set(['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z'])
temp.append(arr[i])
if len(temp) == N and len((set(temp) & a)) >= 1 and len((set(temp) & b)) >= 2 :

1.2 int문제관련
123 -> [1, 2, 3]
board = [list(map(int, input().rstrip())) for _ in range(N)

2. copy (딥카피)(주소까지 다르게 복사)
import copy
temp = copy.deepcopy(board)


3.1 조합(순서 상관X)
from itertools import combinations
safezone = []
safezone.append((i,j))
리스트에서 조합을 구하기 위하여 리스트안에 튜플형식으로 삽입
addWallList = list(combinations(safezone, 3))


3.2 순열(순서 상관O)
from itertools import permutations
arr = [1,3,4,2,5]
temp = list(permutations(arr,3))


4. 연산
(0-1)%4 -> 3이다!!   (0+1)%4 가 1이고!


5. sort
weightList.sort(reverse=True) -> 역순
time = sorted(time, key=lambda a: a[0]) -> 그리디 1931 최대회의실배정
time = sorted(time, key=lambda a: a[1])

6. bfs 2206 벽부수기 한번 보기

7. 코테 제출언어에 pypy3있으면 이걸로 제출하기!!!!!!!!!!